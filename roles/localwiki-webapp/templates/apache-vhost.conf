# LocalWiki Apache config file
# After modifying and saving, you may need to run these commands:
#     $ sudo a2ensite example.com
#     $ sudo /etc/init.d/apache2 reload

<VirtualHost *:80>
    ServerName lowiki.org
    
    RewriteEngine on
    RewriteCond %{HTTPS} off
    RewriteRule (.*) https://lowiki.tw%{REQUEST_URI} [R=301]
</VirtualHost>

<VirtualHost *:8084>
    ServerName lowiki.org
    ServerAlias www.lowiki.org
    
    ServerAdmin contact@lowiki.org

        ProxyRequests Off
        ProxyPreserveHost On

        <Proxy *>
              Order deny,allow
              Allow from all
        </Proxy>

        # proxy for Webmin service
        ProxyPass /_report/ http://139.162.15.44:3000/
        ProxyPassReverse /_report/ http://139.162.15.44:3000/

    WSGIDaemonProcess localwiki processes=2 threads=15 maximum-requests=10000 user=www-data group=www-data display-name=%{GROUP}
    WSGIProcessGroup localwiki
    # For API Authorization header support
    WSGIPassAuthorization On

    #WSGIScriptAlias / /srv/localwiki/production.wsgi
    WSGIScriptAlias / /srv/localwiki/development.wsgi

    CustomLog ${APACHE_LOG_DIR}/access.log combined
    ErrorLog ${APACHE_LOG_DIR}/error.log
    
    #SetEnv no-gzip  # Doesn't play well with Varnish:
    #  If the content is gzip'ed, then Varnish won't add a Content-Length
    #  header, which means KeepAlive effectively won't work. Bad. So we
    #  only do gziping when the response comes /out/ of apache at the
    #  very end here (*:443 VirtualHost below).

    KeepAlive Off

</VirtualHost>

<IfModule mod_ssl.c>
<VirtualHost *:443>
	ServerAdmin contact@lowiki.org

	SSLCertificateFile /etc/letsencrypt/live/lowiki.tw/cert.pem
	SSLCertificateKeyFile /etc/letsencrypt/live/lowiki.tw/privkey.pem
	Include /etc/letsencrypt/options-ssl-apache.conf
	ServerName lowiki.tw
	SSLCertificateChainFile /etc/letsencrypt/live/lowiki.tw/chain.pem

	ServerAlias *.lowiki.org
	Include extra-conf/main_router.conf
</VirtualHost>
</IfModule>
